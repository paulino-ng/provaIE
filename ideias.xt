Gerais:
- questões e alternativas num BD (inicialmente SQLite), usar um adaptador de entradas
  dados esperados por questão:
  + id: int
  + dificuldade: {1,2,3}
  + autor: text
  + area: text
  + enunciado: text
  + fig-enun: blob
  + alternativa1..alternativa5: text
  + fig-alt1..fig-alt5: blob
  + correta: 1..5
- sortear questões (por area)
- embaralhar alternativas
- gerar prova (form)
- desembaralhar alternativas, corrigir prova, gerar estatísticas (colocar respostas num BD)
  estat:
  + para cada questão, número de vezes em que cada alternativa foi selecionada (guardar
    cada prova com data, ou só a totalização?)
- cada prova aplicada deve ser armazenada num BD:
  + id do examinado
  + lista das questões aplicadas
  + alternativas/respostas para cada questão (guardar permutação usada)
- a maioria do processamento é feita no servidor, no cliente (browser), no máximo será feito o controle de tempo da aplicação da prova, redução da visibilidade das questões para não resultar em uma página muito longa.
Algoritmo de permutação de alternativas:
permuta=[x for x in range(5)]
for i in range(4):
    index = randint(5-i)
    y = permuta.pop(index)
    permuta.append(y)
- BD de examinados: nome, id, cpf, ...
- autenticação para geração de prova, questões não devem ser repetidas se estiver refazendo a prova, pelo menos avisar (email, ou outro tipo de notificação)
  no caso de repetição necessária.
